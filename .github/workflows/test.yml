name: Test

on:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Install aqua
      uses: aquaproj/aqua-installer@v3.0.1
      with:
        aqua_version: v2.25.1
        enable_aqua_install: true
        aqua_opts: ""

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install aqua
      uses: aquaproj/aqua-installer@v3.0.1
      with:
        aqua_version: v2.25.1
        enable_aqua_install: true
        aqua_opts: ""

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
    - uses: actions/checkout@v4

    - name: Install aqua
      uses: aquaproj/aqua-installer@v3.0.1
      with:
        aqua_version: v2.25.1
        enable_aqua_install: true
        aqua_opts: ""

    - name: Build
      run: go build -v ./...

    - name: Verify build
      run: |
        go build -o tnnl main.go
        ./tnnl --help
      if: matrix.os != 'windows-latest'

    - name: Verify build (Windows)
      run: |
        go build -o tnnl.exe main.go
        ./tnnl.exe --help
      if: matrix.os == 'windows-latest'